/*************************************************
* Jordan Acquah-Asare
* Transaction Class
**************************************************

struct Item
{
	string name;
	int num;
	float price;
};

#ifndef TRANSACTION_H_
#define TRANSACTION_H_

#include <string>
#include <iostream>
#include <iomanip>
#include "date.h"

using namespace std;

class Transaction
{
public:
	Transaction();
	Transaction(string newName, int newNum,
		    float newPrice, int newMember);
	~Transaction();
	string GetItem();
	void SetItem(string newName);
	void SetItem(int newItemNum);
	void SetItem(float newPrice);
	void SetItem(string newName, int newItemNum, float newPrice);
	void PrintItem();
	int GetMemberNum();
	void SetMemberNum(int newMemberNum);
	void PrintMemberNum();
	Transaction GetNext();
	void SetNext(Transaction *newNext);
	Transaction GetPrev();
	void SetNext(Transaction *newPrev);

private:
	int memberNum;
	Item theItem;
	Date theDate;
	Transaction *next;
	Transaction *prev;
};
#endif /* TRANSACTION_H_ */

#include "transaction.h"

	Transaction::Transaction()
	{
		theItem.name = ' ';
		theItem.num = 0;
		theItem.price = 0.0;
		memberNum = 0;
		theDate::Date()
		next = NULL;
		prev = NULL;
	}
	Transaction::Transaction(string newName,int newNum,
				   float newPrice,int newMember)
	{
		theItem.name = newName;
		theItem.num = newNum;
		theItem.price = newPrice;
		memberNum = newMember;
		theDate::Date()
		next = NULL;
		prev = NULL;

	}
	Transaction::~Transaction()
	{
		cout << "Calling Transaction Deconstructor";
	}
	Item Transaction::GetItem()
	{
		return theItem;
	}
	void Transaction::SetItem(string newName)
	{
		theItem.name = newName;
	}
	void Transaction::SetItem(int newNum)
	{
		theItem.num = newNum;
	}
	void Transaction::SetItem(float newPrice)
	{
		theItem.price = newPrice;
	}
	void Transaction::SetItem(string newName,int newNum,
				   float newPrice)
	{
		theItem.name = newName;
		theItem.num = newNum;
		theItem.price = newPrice;
	}
	void Transaction::PrintItem()
	{
		cout << theItem.name << ' ' << theItem.num << ' ' << theItem.price;
	}
	int Transaction::GetMemberNum()
	{
		return memberNum;
	}
	void Transaction::SetMemberNum(int newMemberNum)
	{
		memberNum = newMemberNum;
	}
	void Transaction::PrintMemberNum()
	{
		cout << memberNum;
	}
	Transaction Transaction::GetNext()
	{
		return next;
	}
	void Transaction::SetNext(Transaction *newNext)
	{
		next = newNext;
	}
	Transaction Transaction::GetNext()
	{
		return Prev;
	}
	void Transaction::SetPrev(Transaction *newPrev)
	{
		prev = newPrev;
	}
